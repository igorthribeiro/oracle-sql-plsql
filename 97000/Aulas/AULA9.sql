SELECT * FROM CURSO;

DESC USER_CONSTRAINTS;

SELECT CONSTRAINT_NAME, SEARCH_CONDITION, STATUS,
       DEFERRABLE, DEFERRED
  FROM USER_CONSTRAINTS
 WHERE TABLE_NAME = 'CURSO';
 
ALTER TABLE CURSO RENAME
   CONSTRAINT SYS_C0010676 TO NN_NOM_CURSO; 
   
INSERT INTO CURSO VALUES (DEFAULT, 'REVISÃO SQL',
   SYSDATE, SYSDATE);

ALTER TABLE CURSO DISABLE CONSTRAINT CK_DATA;

SELECT * FROM CURSO;

ALTER TABLE CURSO ENABLE NOVALIDATE
      CONSTRAINT CK_DATA;

SELECT CONSTRAINT_NAME, SEARCH_CONDITION, STATUS,
       DEFERRABLE, DEFERRED
  FROM USER_CONSTRAINTS
 WHERE TABLE_NAME = 'ALUNO';
 
ALTER TABLE ALUNO DROP CONSTRAINT CK_MAIOR;

ALTER TABLE ALUNO ADD
   CONSTRAINT CK_MAIOR CHECK(NUM_IDADE >= 18)
   DEFERRABLE INITIALLY DEFERRED; 

DESC ALUNO;

INSERT INTO ALUNO VALUES (DEFAULT, 'MA777FF',
             'LUIZ RANIELLE', SYSDATE, DEFAULT,
             17, 'luiz@gmail.com', '95000');
COMMIT;  
ROLLBACK;

SET CONSTRAINT ALL IMMEDIATE;

 
CREATE GLOBAL TEMPORARY TABLE ECOMMERCE(
   COD_COMPRA NUMBER(10),
   NOM_CLIENTE VARCHAR2(30 CHAR))
   ON COMMIT DELETE ROWS; /* PRESERVE ROWS */
   
INSERT INTO ECOMMERCE VALUES (1, 'LUCIANO BARROS');
INSERT INTO ECOMMERCE VALUES (2, 'VICTOR HUGO');
INSERT INTO ECOMMERCE VALUES (3, 'TAIS SILVA');
SELECT * FROM ECOMMERCE;
COMMIT;
SELECT * FROM ECOMMERCE;
   

--CONECTAR COMO SYSDBA
CREATE DIRECTORY DP AS 'C:\temp';
GRANT READ,WRITE ON DIRECTORY DP TO ORA1;

--CONECTAR COMO ORA1   
--DROP TABLE ORAEMP;
CREATE TABLE ORAEMP(
    FIRST_NAME CHAR(20),
    LAST_NAME  CHAR(20),
    CITY       CHAR(20),
    SALARY     CHAR(20))
ORGANIZATION EXTERNAL (TYPE ORACLE_LOADER DEFAULT
  DIRECTORY DP ACCESS PARAMETERS (RECORDS DELIMITED BY NEWLINE
                                  SKIP 1
                                  FIELDS TERMINATED BY ',' (
                                     FIRST_NAME CHAR(20),
                                     LAST_NAME  CHAR(20),
                                     CITY       CHAR(20),
                                     SALARY     CHAR(20)))
  LOCATION('ORAEMP.CSV'));
  
SELECT * FROM ORAEMP;                                  
  
  
SELECT EMPLOYEE_ID, LAST_NAME, SALARY, DEPARTMENT_ID
  FROM EMPLOYEES
 WHERE (DEPARTMENT_ID, SALARY)
                     IN (SELECT DEPARTMENT_ID, MIN(SALARY)
                            FROM EMPLOYEES
                           GROUP BY DEPARTMENT_ID);
                          

SELECT EMPLOYEE_ID, LAST_NAME, SALARY, DEPARTMENT_ID
  FROM EMPLOYEES FORA
 WHERE SALARY > (SELECT AVG(SALARY)
                   FROM EMPLOYEES DENTRO
                  WHERE FORA.DEPARTMENT_ID =
                        DENTRO.DEPARTMENT_ID);
                        
SELECT EMPLOYEE_ID, FIRST_NAME
  FROM EMPLOYEES EXTERNA
 WHERE EXISTS (SELECT NULL
                FROM EMPLOYEES INTERNA
               WHERE EXTERNA.EMPLOYEE_ID
                         = INTERNA.MANAGER_ID);
                         
SELECT EMPLOYEE_ID, HIRE_DATE,
       (SELECT COUNT(*)
          FROM EMPLOYEES I
         WHERE I.HIRE_DATE > E.HIRE_DATE) ENTROU_DEPOIS
 FROM EMPLOYEES E;
 
SELECT E.EMPLOYEE_ID, E.DEPARTMENT_ID, E.FIRST_NAME, E.SALARY,
       (SELECT COUNT(*)
          FROM EMPLOYEES I
         WHERE E.DEPARTMENT_ID = I.DEPARTMENT_ID
           AND E.SALARY > I.SALARY) GANHA_MAIS
  FROM EMPLOYEES E;
          
SELECT E.EMPLOYEE_ID, E.JOB_ID, E.FIRST_NAME, E.SALARY,
       (SELECT COUNT(*)
          FROM EMPLOYEES I
         WHERE E.JOB_ID = I.JOB_ID
           AND E.SALARY < I.SALARY
           AND E.EMPLOYEE_ID != I.EMPLOYEE_ID) GANHA_MAIS
  FROM EMPLOYEES E;
                                                  
WITH
  AVG_EMP AS (
             SELECT AVG(SALARY) MEDIA
               FROM EMPLOYEES),
  MIN_DEPT AS (
             SELECT DEPARTMENT_ID, MIN(SALARY) MINIMO
               FROM EMPLOYEES
              GROUP BY DEPARTMENT_ID)
 SELECT DEPARTMENT_ID, ROUND((MEDIA-MINIMO),2) DIFERENCA
   FROM AVG_EMP, MIN_DEPT;
   
   
   
WITH
   MED_DEPT AS (SELECT DEPARTMENT_ID, AVG(SALARY) M_SALARY
                  FROM EMPLOYEES
              GROUP BY DEPARTMENT_ID)
  SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
    FROM EMPLOYEES E JOIN MED_DEPT M
         ON (E.DEPARTMENT_ID = M.DEPARTMENT_ID)
   WHERE E.SALARY > M.M_SALARY;
   
