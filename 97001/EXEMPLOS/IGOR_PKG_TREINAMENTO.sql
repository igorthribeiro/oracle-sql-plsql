CREATE OR REPLACE PACKAGE PKG_TREINAMENTO IS
    --SELECT REGEXP_REPLACE(201902, '([[:digit:]]{4})([[:digit:]]{2})','\2 - \1') SEMESTRE FROM DUAL;
    
    CURSOR C_NOTAS_MEDIA IS SELECT CD_ALUNO, DS_NOME, NM_SEMESTRE, DS_MATRICULA, VL_NOTA1, VL_NOTA2,
                                   VL_NOTA3, VL_NOTA4, VL_MEDIA
                              FROM ALUNO NATURAL JOIN NOTAS;
    
    TYPE T_NOTAS_MEDIA IS TABLE OF C_NOTAS_MEDIA%ROWTYPE;    
    V_NOTAS_MEDIA T_NOTAS_MEDIA;
    
    FUNCTION FC_CALCULA_MEDIA(P_VL_NOTA1 NOTAS.VL_NOTA1%TYPE, 
                              P_VL_NOTA2 NOTAS.VL_NOTA2%TYPE, 
                              P_VL_NOTA3 NOTAS.VL_NOTA3%TYPE, 
                              P_VL_NOTA4 NOTAS.VL_NOTA4%TYPE) RETURN NOTAS.VL_MEDIA%TYPE;
    
    FUNCTION FC_CALCULA_MEDIA(P_CD_ALUNO NOTAS.CD_ALUNO%TYPE, P_NM_SEMESTRE NOTAS.NM_SEMESTRE%TYPE) RETURN NOTAS.VL_MEDIA%TYPE;
    
    PROCEDURE SP_CARREGA_NOTAS;
    

END PKG_TREINAMENTO;

/

CREATE OR REPLACE PACKAGE BODY PKG_TREINAMENTO IS

    FUNCTION FC_CALCULA_MEDIA(P_VL_NOTA1 NOTAS.VL_NOTA1%TYPE, 
                              P_VL_NOTA2 NOTAS.VL_NOTA2%TYPE, 
                              P_VL_NOTA3 NOTAS.VL_NOTA3%TYPE, 
                              P_VL_NOTA4 NOTAS.VL_NOTA4%TYPE) RETURN NOTAS.VL_MEDIA%TYPE
    IS
    BEGIN
        RETURN ROUND((P_VL_NOTA1 + P_VL_NOTA2 + P_VL_NOTA3 + P_VL_NOTA4)/4, 2);
    END;


    FUNCTION FC_CALCULA_MEDIA(P_CD_ALUNO NOTAS.CD_ALUNO%TYPE, P_NM_SEMESTRE NOTAS.NM_SEMESTRE%TYPE) RETURN NOTAS.VL_MEDIA%TYPE
    IS
        V_MEDIA NOTAS.VL_MEDIA%TYPE;
    BEGIN
        FOR I IN V_NOTAS_MEDIA.FIRST..V_NOTAS_MEDIA.LAST LOOP
            IF V_NOTAS_MEDIA(I).CD_ALUNO = P_CD_ALUNO AND V_NOTAS_MEDIA(I).NM_SEMESTRE = P_NM_SEMESTRE THEN
               RETURN FC_CALCULA_MEDIA(V_NOTAS_MEDIA(I).VL_NOTA1, V_NOTAS_MEDIA(I).VL_NOTA2, V_NOTAS_MEDIA(I).VL_NOTA3, V_NOTAS_MEDIA(I).VL_NOTA4);
            END IF;
        END LOOP;

        RETURN 0;

    END FC_CALCULA_MEDIA;

    PROCEDURE SP_CARREGA_NOTAS
    IS
    BEGIN
        OPEN C_NOTAS_MEDIA;
        FETCH C_NOTAS_MEDIA BULK COLLECT INTO V_NOTAS_MEDIA;
        CLOSE C_NOTAS_MEDIA;
    END SP_CARREGA_NOTAS;
    
    --BLOCO DE INICIALIZAÇÃO
    BEGIN
        SP_CARREGA_NOTAS;

END;
/