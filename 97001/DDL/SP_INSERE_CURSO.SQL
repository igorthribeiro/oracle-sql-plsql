create or replace PROCEDURE SP_INSERE_CURSO
                           (P_NM_CURSO CURSO.NM_CURSO%TYPE,
                            P_DT_INICIO CURSO.DT_INICIO%TYPE DEFAULT SYSDATE,
                            P_DT_FIM CURSO.DT_FIM%TYPE := SYSDATE + 30,
                            P_FEEDBACK IN OUT VARCHAR2)
IS
   E_ERRO_NOME_CURSO EXCEPTION;
   E_ERRO_DATA_CURSO EXCEPTION;
   V_CD_CURSO CURSO.CD_CURSO%TYPE;
BEGIN
   DBMS_OUTPUT.PUT_LINE(P_FEEDBACK);
   
   IF P_NM_CURSO IS NULL OR LENGTH(P_NM_CURSO) > 30 THEN
      RAISE E_ERRO_NOME_CURSO;
   END IF;
   IF P_DT_FIM < P_DT_INICIO THEN
      RAISE E_ERRO_DATA_CURSO;
   END IF;
   
   V_CD_CURSO := SQ_CD_CURSO.NEXTVAL;

   INSERT INTO CURSO VALUES (V_CD_CURSO, P_NM_CURSO, P_DT_INICIO, P_DT_FIM);
   P_FEEDBACK := 'CURSO '||P_NM_CURSO||' INSERIDO COM SUCESSO!';
    
   EXCEPTION
      WHEN E_ERRO_NOME_CURSO THEN
         P_FEEDBACK := 'O NOME DO CURSO NÃO PODE SER NULO E DEVE CONTER'||
                              ' NO MÁXIMO 30 CARACTERES';
      WHEN E_ERRO_DATA_CURSO THEN
         P_FEEDBACK := 'A DATA DE FIM DEVE SER MAIOR QUE A DATA DE INICIO DO CURSO!';
END;